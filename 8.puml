@startuml
class com.example.platform_for_volunteer_projects.RegistrationController {
+ TextField regNameField
+ TextField regEmailField
+ PasswordField regPasswordField
+ ComboBox<String> roleComboBox
+ Button buttonLogin
- void handleRegistration()
- void openMainWindow()
- boolean isEmailExists(Connection,String)
- void clearFields()
- void showAlert(Alert.AlertType,String,String)
}


class com.example.platform_for_volunteer_projects.RegistrationController$PasswordUtils {
+ {static} String hash(String)
+ {static} boolean check(String,String)
}

class com.example.platform_for_volunteer_projects.OrganizerController {
- TableView<Event> tableViewMeetings
- TableColumn<Event,String> column1
- TableColumn<Event,String> column2
- TextField textFieldNameMeet
- TextArea textAreaDescriptionMeets
- TextField textFieldLocationMeets
- TextField textFieldParticipantsMeets
- ComboBox<String> comboBoxCategoryMeets
- ComboBox<String> comboBoxStatysMeets
- Button buttonAddMeets
- TextField textFieldPTimeToMeet
- TableView<Event> eventsTable
- Button buttonDeleteMeets
- Tab tabLenta
- TableView<Event> tableViewNews
- TableColumn<Event,String> newsColumn1
- TableColumn<Event,String> newsColumn2
- int editingEventId
+ CurrentUser currentUser
- ObservableList<Event> eventsData
- Button buttonLogout
+ void initUserData(CurrentUser)
- void handleLogout()
+ void initialize()
- void loadNewsFromDatabase()
- Connection getConnection()
+ void buttonDeleteMeetsOnAction()
- void showAlert(String,String,String)
- void fillFormWithSelectedEvent(Event)
+ void handleRed()
- int getTypeIdByName(String,Connection)
- int getStatusIdByName(String,Connection)
- void handleAddEvent()
- void loadEventsFromDatabase()
- void clearFields()
- void showAlert(Alert.AlertType,String,String)
}


class com.example.platform_for_volunteer_projects.OrganizerController$Event {
- String dataEvent
- int id
- String name
+ int getId()
+ String getDataEvent()
+ String getName()
}


class com.example.platform_for_volunteer_projects.LoginController {
- Button buttonLogin
- Button buttonRegistration
- TextField textFieldMail
- PasswordField textFieldPassword
+ Button buttonView
- void handleLoginButton()
+ void handleButtonView()
- void openMainWindow(CurrentUser)
- void handleRegistrationButton()
- void closeWindow()
- void showAlert(Alert.AlertType,String,String)
}


class com.example.platform_for_volunteer_projects.LoginController$PasswordUtils {
+ {static} String hash(String)
+ {static} boolean check(String,String)
}

class com.example.platform_for_volunteer_projects.MainController {
- CurrentUser currentUser
- Event selectedEvent
- Event selectedMeeting
- ObservableList<Event> eventList
- TableView<Event> tableViewRecords
- TableColumn<Event,String> nameColumn
- TableColumn<Event,String> descriptionColumn
- TableColumn<Event,String> locationColumn
- TableColumn<Event,Integer> maxPeopleColumn
- Button buttonRecordsMeets
- Button buttonLogout
- TableView<Event> tableViewMeetings
- TableColumn<Event,String> meetingNameColumn
- TableColumn<Event,String> meetingDateColumn
- TableColumn<Event,String> meetingTimeColumn
- TableColumn<Event,String> meetingStatusColumn
+ void initialize()
+ void initUserData(CurrentUser)
- void initializeMeetingsTable()
- void initializeRecordsTable()
- void loadEventsFromDatabase()
- void handleLogout()
- void handleGenerateCertificate()
- void createWordCertificate(String,String,String,String)
- String generateCertificateNumber()
- void registerForEvent()
- void sendEmail(String,String,String)
- void showAlert(String,String)
}


class com.example.platform_for_volunteer_projects.ObserverController {
- TableView<Event> tableViewNews
- TableColumn<Event,String> colName
- TableColumn<Event,String> colDate
- Button buttonLogout
+ void initialize()
- void loadEventsFromDatabase()
- void handleLogout()
- void showAlert(String,String,String)
}


class com.example.platform_for_volunteer_projects.ObserverController$Event {
- String name
- String date
+ String getName()
+ String getDate()
}


class com.example.platform_for_volunteer_projects.HelloApplication {
+ void start(Stage)
+ {static} void main(String[])
- {static} void initDatabase()
}



com.example.platform_for_volunteer_projects.RegistrationController +.. com.example.platform_for_volunteer_projects.RegistrationController$PasswordUtils
com.example.platform_for_volunteer_projects.OrganizerController +.. com.example.platform_for_volunteer_projects.OrganizerController$Event
com.example.platform_for_volunteer_projects.LoginController +.. com.example.platform_for_volunteer_projects.LoginController$PasswordUtils
com.example.platform_for_volunteer_projects.ObserverController +.. com.example.platform_for_volunteer_projects.ObserverController$Event
javafx.application.Application <|-- com.example.platform_for_volunteer_projects.HelloApplication
@enduml